Checking the Archive Mode
Log in to the database server as the oracle user. The default password of the oracle user is Change_Me.
Connect to the database.
sqlplus / as sysdba

Check the database log mode.
SQL> select NAME,LOG_MODE from v$database;

The following information is displayed:

NAME       LOG_MODE  
---------- ------------  
ora11g     ARCHIVELOG
When LOG_MODE is ARCHIVELOG, skip the following steps and directly perform operations in Configuring the Directory for Storing Archive Logs.
When LOG_MODE is NOARCHIVELOG, perform the following steps to open the archive log.
Run the command on both nodes of Oracle database to modify archive log file format parameters.
SQL> alter system set log_archive_format='%t_%s_%r.dbf' scope=spfile;

Run the command on both nodes of Oracle database to close all database instances.
SQL>shutdown immediate;

Run the following commands on only one node to set the database to work in ARCHIVELOG mode.
SQL>startup mount;

SQL>alter database archivelog;

SQL>alter database open;

Verify that the database log mode is ARCHIVELOG.
SQL> select NAME,LOG_MODE from v$database;

The following information is displayed:

NAME      LOG_MODE  
--------- ------------  
ora11g    ARCHIVELOG
Run the following command on other the node to open database instances:
SQL>startup;

Exit the database.
SQL> exit

Configuring the Directory for Storing Archive Logs
You need to configure the directory for storing archive logs on both nodes of Oracle database.

Log in to the database server as the oracle user. The default password of the oracle user is Change_Me.
Connect to the database.
sqlplus / as sysdba

Check whether the directory for storing archive logs is correctly set.
SQL> show parameter log_archive_dest;

Information similar to the following is displayed:

NAME                  TYPE      VALUE  
-------------------------------------  
log_archive_dest      string  
log_archive_dest_1    string    LOCATION=+DG_ARCHIVE     
log_archive_dest_10   string  
……
SQL> show parameter log_archive_duplex_dest;

Information similar to the following is displayed:

NAME                         TYPE      VALUE  
--------------------------------------------
log_archive_duplex_dest      string  


Modify the directory for storing archive logs.
SQL> alter system set log_archive_dest_1='LOCATION=+DG_ARCHIVE' scope=spfile;

Restart database instances.
SQL> shutdown immediate;

SQL> startup;

Verify the directory for storing archive logs is correctly set.
SQL> show parameter log_archive_dest_1;

Exit the database.
SQL> exit

Configuring Automatic Backup of Control Files
You need to configure automatic backup of control files on both nodes of Oracle database.

Log in to the database server as the oracle user. The default password of the oracle user is Change_Me.
Log in to the RMAN.
rman target / nocatalog

View the default parameter settings of the RMAN.
RMAN> show all;

Information similar to the following is displayed:

RMAN configuration parameters for database with db_unique_name ORAGDN are:  
CONFIGURE RETENTION POLICY TO REDUNDANCY 1;  
CONFIGURE BACKUP OPTIMIZATION OFF; # default  
CONFIGURE DEFAULT DEVICE TYPE TO DISK; # default 
CONFIGURE CONTROLFILE AUTOBACKUP OFF; 
CONFIGURE CONTROLFILE AUTOBACKUP FORMAT FOR DEVICE TYPE DISK TO '%F'; # default  
.....
CONFIGURE CONTROLFILE AUTOBACKUP OFF indicates that control files are not automatically backed up. Run the following command to configure control files to be automatically backed up:

Set a local directory for storing automatically backed up control files.
RMAN> CONFIGURE CONTROLFILE AUTOBACKUP FORMAT FOR DEVICE TYPE DISK TO '+DG_ARCHIVE/controlfile_%F';

Verify the configuration.
RMAN> show all;

Information similar to the following is displayed:

RMAN configuration parameters for database with db_unique_name ORAGDN are:  
CONFIGURE RETENTION POLICY TO REDUNDANCY 1; # default  
CONFIGURE BACKUP OPTIMIZATION OFF; # default  
CONFIGURE DEFAULT DEVICE TYPE TO DISK; # default  
CONFIGURE CONTROLFILE AUTOBACKUP ON; 
CONFIGURE CONTROLFILE AUTOBACKUP FORMAT FOR DEVICE TYPE DISK TO '+DG_ARCHIVE/controlfile_%F'; 
......
Modify the directory for storing control file snapshots generated.
 
If an ASM directory is used, run the following command:
RMAN> CONFIGURE SNAPSHOT CONTROLFILE NAME TO '+DG_ORA/snapcf_DBNAME.f';

If a shared directory is used, run the following command:
RMAN> CONFIGURE SNAPSHOT CONTROLFILE NAME TO 'Shared directory/snapcf_DBNAME.f';

Exit the RMAN.
RMAN> exit

Performing the Backup
Perform 1 to 4 on both nodes of Oracle database to create the backup files. Then perform 5 on only one node to back up database.

Log in to the database server as the oracle user. The default password of the oracle user is Change_Me.
Create directories for storing backup files.
cd /opt/oracle/

mkdir backup

Create the backup_oracle.sh script file in the directory for storing backup files.
Create a backup script file.
cd /opt/oracle/backup

vi backup_oracle.sh

Press i to enter the editing mode and copy the following content to the script file:
#!/bin/ksh  
log="/opt/oracle/backup/backup_db.log"  
if [ -f $log ]  
then  
   rm  -f $log  
fi  
##########Obtain the instance number of current instance########## 
instnum="SELECT INSTANCE_NUMBER FROM V\$INSTANCE"  
resultnum=`echo "set echo off\nset feedback off\nset heading off\nset newpage 0\nset pagesize 0\n$instnum;\nexit;\n"|sqlplus -s / as sysdba`  

##########Obtain the total number of the instances########## 
instcount="SELECT COUNT(*) FROM GV\$INSTANCE" 
resultcount=`echo "set echo off\nset feedback off\nset heading off\nset newpage 0\nset pagesize 0\n$instcount;\nexit;\n"|sqlplus -s / as sysdba`                        

if [ $resultnum -eq 1 ]   
  then     
    echo About to perform backup on Node1!     
    $ORACLE_HOME/bin/rman target / nocatalog cmdfile=/opt/oracle/backup/backup_oracle.cmd 1>>/opt/oracle/backup/backup_db.log 2>&1     
  elif [ $resultcount -eq 1 ]     
    then        
      echo Abort to perform backup on Node2!         
      $ORACLE_HOME/bin/rman target / nocatalog cmdfile=/opt/oracle/backup/backup_oracle.cmd 1>>/opt/oracle/backup/backup_db.log 2>&1   
    else        
      exit 
fi 
Press Esc to exit the editing mode and run the :wq command to save the file and exit.
Grant the execute permission on the script file.
chmod 700 backup_oracle.sh

Create the backup_oracle.cmd script in the directory for storing backup commands.
Create a backup command file.
vi backup_oracle.cmd

Press i to enter the editing mode and copy the following content to the script file:
run {  
allocate channel t1 type disk;  
allocate channel t2 type disk;  
crosscheck backup;  
crosscheck archivelog all;  
delete noprompt expired backup;  
delete noprompt expired archivelog all;  
backup as compressed backupset incremental level 0 database format '+DG_BACKUP/db_backup_%s_%p_%t';  
backup as compressed backupset format '+DG_BACKUP/arcbackup_%s_%p_%t_%d' archivelog all delete input;  
backup spfile format='+DG_BACKUP/spfilebak_%s_%p_%t_%d ';  
delete noprompt obsolete;  
release CHANNEL t1;  
release CHANNEL t2;  
}
Press Esc to exit the editing mode and run the :wq command to save the file and exit.
Run the following command in the /opt/oracle/backup directory to perform the backup.
./backup_oracle.sh